openapi: 3.0.3
info:
  title: Skill tree API contracts
  version: 1.0.11

tags:
  - name: skills
    description: Everything about user skills
  - name: endorsements
    description: Everything about endorsements made
  - name: user
    description: Operations about user
paths:
  /skills:
    get:
      tags:
        - skills
      summary: Get skills for all users
      description: Get skills for all users
      operationId: getSkills
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillsArray'

        '404':
          description: Skills not found


  /skills/{userId}:
    get:
      tags:
        - skills
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string

      summary: Get skills for a user
      description: Get skills for a user
      operationId: getSkillForUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Skills'



  /endorsements:
    get:
      tags:
        - endorsements
      summary: Fetch all endorsements / filter for a status
      description: Fetch all endorsements / fetch for a given status
      operationId: getEndorsements
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: PENDING_APPROVAL
            enum:
              - PENDING_APPROVAL
              - APPROVED
              - REJECTED
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endorsement'

        '400':
          description: Invalid status value
    post:
      tags:
        - endorsements
      summary: Create an endorsement for a skill
      description: Create an endorsement for a skill
      operationId: createEndorsement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endorsement'

      responses:
        '204':
          description: Created endorsement sucessfully


  /endorsements/{endorsementId}:
    patch:
      tags:
        - endorsements
      parameters:
        - name: endorsementId
          schema:
            type: string
          in: path
          description: EndorsementId which has to be modified
          required: true

      summary: Update endorsement status given endorsementId
      description: Update endorsement status given endorsement id
      operationId: updateEndorsementStatusGivenId

      responses:
        '204':
          description: update operation successful

        '400':
          description: Invalid endorsement Id value


components:
  schemas:
    Skills:
      type: object
      properties:
        id:
          type: string
          example: skill-1
        name:
          type: string
          example: Java
        type:
          type: string
          example: atomic / derived
        description:
          type: string

    EndorsementObj:
      type: object
      properties:
        behaviour:
          type: string
          default: POSITIVE
          enum:
            - POSITIVE
            - NEGATIVE
        description:
          type: string
          minimum: 1
          maximum: 256

    Endorsement:
      required:
        - skillId
        - endorsedUserId
        - endorsementsList

      type: object
      properties:
        skillId:
          type: string
          example: Java
        endorsedUserId:
          type: string
          example: user-1

        endorsementsList:
          type: array
          items:
            $ref: '#/components/schemas/EndorsementObj'

    SkillsArray:
      type: array
      items:
        $ref: '#/components/schemas/Skills'


    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Endorsement request object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Endorsement'

